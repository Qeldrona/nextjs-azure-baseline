{"version":3,"file":"static/webpack/static/development/pages/posts.js.3079e74c8e28dce16dc7.hot-update.js","sources":["webpack:///./src/Components/PostGenerator.js"],"sourcesContent":["import React, {Component} from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport '../CSS/components/PostGenerator.css';\n\nconst PostComponent = ({title, body, key}) => (\n  <li key={key}>\n    <h2 className={\"post-title\"}>{title}</h2>\n    <p className={\"post-body\"}>{body}</p>\n  </li>\n);\n\nclass PostGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.generatePost = this.generatePost.bind(this);\n  }\n  generatePost() {\n    let randomIndex = Math.floor(Math.random() * 100);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${randomIndex}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({posts: [...this.state.posts, data]});\n      });\n\n\n  }\n  render() {\n    return (\n      <div className={\"post-generator\"}>\n        <div className={\"post-creator\"}>\n          <button className={\"generate-btn\"} onClick={this.generatePost}>Add Post</button>\n          <hr className=\"splitter\"/>\n        </div>\n          <ul className={\"posts\"}>\n          {this.state.posts.map(i => (\n            <PostComponent title={i.title} body={i.body} key={i.id}/>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PostGenerator;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;AAjCA;AACA;AAmCA;;;;A","sourceRoot":""}